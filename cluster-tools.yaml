apiVersion: v1
kind: Service
metadata:
  name: cluster-tool
  # Creates a NEG after an Ingress is created
  # neg, refer https://cloud.google.com/load-balancing/docs/negs
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8081
  selector:
    app: cluster-tool
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-tool
  labels:
    app: cluster-tool
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cluster-tool
  template:
    metadata:
      labels:
        app: cluster-tool
    spec:
      containers:
        - name: cluster-tool
          image: yw4code/cluster-tool:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
          command:
#            - /app/tool
            - sleep
            - infinity
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          resources:
            # Minimum set, refer https://cloud.google.com/kubernetes-engine/docs/concepts/autopilot-overview#allowable_resource_ranges
            requests:
              memory: "512Mi"
              cpu: "250m"
      nodeSelector:
        # select spot node for lower costs
        cloud.google.com/gke-spot: "true"
      terminationGracePeriodSeconds: 25
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  # static IP : https://cloud.google.com/kubernetes-engine/docs/concepts/ingress-xlb
  annotations:
    kubernetes.io/ingress.global-static-ip-name: my-address-01
spec:
  ingressClassName: nginx-example
  rules:
    - http:
        paths:
          - path: /cluster-tool
            pathType: Prefix
            backend:
              service:
                name: cluster-tool
                port:
                  number: 80